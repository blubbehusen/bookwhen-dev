[2023-04-19T11:33:50.216388+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2023-04-19T11:33:50.228768+00:00] inShore Bookwhen API.DEBUG: \InShore\Bookwhen\Client::__set_state(array(    'instanceToken' => NULL,    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'include' =>    array (   ),    'logFile' => 'DEBUG',    'logger' =>    \Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        \Monolog\Handler\StreamHandler::__set_state(array(          'level' =>          \Monolog\Level::Debug,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          \Monolog\Formatter\LineFormatter::__set_state(array(            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2099008,            'format' => '[2023-04-19T11:33:50.228768+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => false,            'stacktracesParser' => NULL,         )),          'streamChunkSize' => 13421772,          'stream' => NULL,          'url' => '/var/www/html/public/DEBUG',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      \DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,      'logDepth' => 0,      'fiberLogDepth' =>      \WeakMap::__set_state(array(     )),      'detectCycles' => true,   )),    'logLevel' => 'Debug',    'validator' =>    \InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    \GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        \GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',          'composedComponents' => NULL,       )),       'handler' =>        \GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          \Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )), )) [] []
[2023-04-19T11:38:29.617043+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2023-04-19T11:38:29.625682+00:00] inShore Bookwhen API.DEBUG: \InShore\Bookwhen\Client::__set_state(array(    'instanceToken' => NULL,    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'include' =>    array (   ),    'logFile' => 'DEBUG',    'logger' =>    \Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        \Monolog\Handler\StreamHandler::__set_state(array(          'level' =>          \Monolog\Level::Debug,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          \Monolog\Formatter\LineFormatter::__set_state(array(            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2099008,            'format' => '[2023-04-19T11:38:29.625682+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => false,            'stacktracesParser' => NULL,         )),          'streamChunkSize' => 13421772,          'stream' => NULL,          'url' => '/var/www/html/public/DEBUG',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      \DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,      'logDepth' => 0,      'fiberLogDepth' =>      \WeakMap::__set_state(array(     )),      'detectCycles' => true,   )),    'logLevel' => 'Debug',    'validator' =>    \InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    \GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        \GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',          'composedComponents' => NULL,       )),       'handler' =>        \GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          \Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )), )) [] []
[2023-04-19T11:38:29.627373+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::getEvents(array (   0 => false,   1 => false,   2 =>    array (   ),   3 =>    array (   ),   4 =>    array (   ),   5 =>    array (   ),   6 => '20230419000000',   7 => '20230430235959',   8 => true, )) [] []
[2023-04-19T11:38:29.651276+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:38:29.652151+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/events, array (   'headers' =>    array (     'Authorization' => 'Basic Og==',   ),   'query' =>    array (     'filter[from]' => '20230419000000',     'filter[to]' => '20230430235959',     'include' => 'location',   ), )) [] []
[2023-04-19T11:39:18.954393+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2023-04-19T11:39:18.961471+00:00] inShore Bookwhen API.DEBUG: \InShore\Bookwhen\Client::__set_state(array(    'instanceToken' => NULL,    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'include' =>    array (   ),    'logFile' => 'DEBUG',    'logger' =>    \Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        \Monolog\Handler\StreamHandler::__set_state(array(          'level' =>          \Monolog\Level::Debug,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          \Monolog\Formatter\LineFormatter::__set_state(array(            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2099008,            'format' => '[2023-04-19T11:39:18.961471+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => false,            'stacktracesParser' => NULL,         )),          'streamChunkSize' => 13421772,          'stream' => NULL,          'url' => '/var/www/html/public/DEBUG',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      \DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,      'logDepth' => 0,      'fiberLogDepth' =>      \WeakMap::__set_state(array(     )),      'detectCycles' => true,   )),    'logLevel' => 'Debug',    'validator' =>    \InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    \GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        \GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',          'composedComponents' => NULL,       )),       'handler' =>        \GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          \Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )), )) [] []
[2023-04-19T11:39:18.962356+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::getEvents(array (   0 => false,   1 => false,   2 =>    array (   ),   3 =>    array (   ),   4 =>    array (   ),   5 =>    array (   ),   6 => '20230419000000',   7 => '20230430235959',   8 => true, )) [] []
[2023-04-19T11:39:18.977548+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:39:18.978534+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/events, array (   'headers' =>    array (     'Authorization' => 'Basic Og==',   ),   'query' =>    array (     'filter[from]' => '20230419000000',     'filter[to]' => '20230430235959',     'include' => 'location',   ), )) [] []
[2023-04-19T11:40:24.826653+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2023-04-19T11:40:24.833089+00:00] inShore Bookwhen API.DEBUG: \InShore\Bookwhen\Client::__set_state(array(    'instanceToken' => NULL,    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'include' =>    array (   ),    'logFile' => 'DEBUG',    'logger' =>    \Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        \Monolog\Handler\StreamHandler::__set_state(array(          'level' =>          \Monolog\Level::Debug,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          \Monolog\Formatter\LineFormatter::__set_state(array(            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2099008,            'format' => '[2023-04-19T11:40:24.833089+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => false,            'stacktracesParser' => NULL,         )),          'streamChunkSize' => 13421772,          'stream' => NULL,          'url' => '/var/www/html/public/DEBUG',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      \DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,      'logDepth' => 0,      'fiberLogDepth' =>      \WeakMap::__set_state(array(     )),      'detectCycles' => true,   )),    'logLevel' => 'Debug',    'validator' =>    \InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    \GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        \GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',          'composedComponents' => NULL,       )),       'handler' =>        \GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          \Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )), )) [] []
[2023-04-19T11:40:24.834728+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::getEvents(array (   0 => false,   1 => false,   2 =>    array (   ),   3 =>    array (   ),   4 =>    array (   ),   5 =>    array (   ),   6 => '20230419000000',   7 => '20230430235959',   8 => true, )) [] []
[2023-04-19T11:40:24.842443+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:40:24.843160+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/events, array (   'headers' =>    array (     'Authorization' => 'Basic Og==',   ),   'query' =>    array (     'filter[from]' => '20230419000000',     'filter[to]' => '20230430235959',     'include' => 'location',   ), )) [] []
[2023-04-19T11:42:20.996215+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2023-04-19T11:42:21.002059+00:00] inShore Bookwhen API.DEBUG: \InShore\Bookwhen\Client::__set_state(array(    'instanceToken' => NULL,    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'include' =>    array (   ),    'logFile' => 'DEBUG',    'logger' =>    \Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        \Monolog\Handler\StreamHandler::__set_state(array(          'level' =>          \Monolog\Level::Debug,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          \Monolog\Formatter\LineFormatter::__set_state(array(            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2099008,            'format' => '[2023-04-19T11:42:21.002059+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => false,            'stacktracesParser' => NULL,         )),          'streamChunkSize' => 13421772,          'stream' => NULL,          'url' => '/var/www/html/public/DEBUG',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      \DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,      'logDepth' => 0,      'fiberLogDepth' =>      \WeakMap::__set_state(array(     )),      'detectCycles' => true,   )),    'logLevel' => 'Debug',    'validator' =>    \InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    \GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        \GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',          'composedComponents' => NULL,       )),       'handler' =>        \GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          \Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )), )) [] []
[2023-04-19T11:42:21.003621+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::getEvents(array (   0 => false,   1 => false,   2 =>    array (   ),   3 =>    array (   ),   4 =>    array (   ),   5 =>    array (   ),   6 => '20230419000000',   7 => '20230430235959',   8 => true, )) [] []
[2023-04-19T11:42:21.013363+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:42:21.014812+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/events, array (   'headers' =>    array (     'Authorization' => 'Basic Og==',   ),   'query' =>    array (     'filter[from]' => '20230419000000',     'filter[to]' => '20230430235959',     'include' => 'location',   ), )) [] []
[2023-04-19T11:42:50.755789+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2023-04-19T11:42:50.762107+00:00] inShore Bookwhen API.DEBUG: \InShore\Bookwhen\Client::__set_state(array(    'instanceToken' => NULL,    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'include' =>    array (   ),    'logFile' => 'DEBUG',    'logger' =>    \Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        \Monolog\Handler\StreamHandler::__set_state(array(          'level' =>          \Monolog\Level::Debug,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          \Monolog\Formatter\LineFormatter::__set_state(array(            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2099008,            'format' => '[2023-04-19T11:42:50.762107+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => false,            'stacktracesParser' => NULL,         )),          'streamChunkSize' => 13421772,          'stream' => NULL,          'url' => '/var/www/html/public/DEBUG',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      \DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,      'logDepth' => 0,      'fiberLogDepth' =>      \WeakMap::__set_state(array(     )),      'detectCycles' => true,   )),    'logLevel' => 'Debug',    'validator' =>    \InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    \GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        \GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',          'composedComponents' => NULL,       )),       'handler' =>        \GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          \Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )), )) [] []
[2023-04-19T11:42:50.763612+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::getEvents(array (   0 => false,   1 => false,   2 =>    array (   ),   3 =>    array (   ),   4 =>    array (   ),   5 =>    array (   ),   6 => '20230419000000',   7 => '20230430235959',   8 => true, )) [] []
[2023-04-19T11:42:50.773383+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:42:50.774112+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/events, array (   'headers' =>    array (     'Authorization' => 'Basic Og==',   ),   'query' =>    array (     'filter[from]' => '20230419000000',     'filter[to]' => '20230430235959',     'include' => 'location',   ), )) [] []
[2023-04-19T11:49:57.544200+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2023-04-19T11:49:57.562017+00:00] inShore Bookwhen API.DEBUG: \InShore\Bookwhen\Client::__set_state(array(    'instanceToken' => NULL,    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'include' =>    array (   ),    'logFile' => 'DEBUG',    'logger' =>    \Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        \Monolog\Handler\StreamHandler::__set_state(array(          'level' =>          \Monolog\Level::Debug,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          \Monolog\Formatter\LineFormatter::__set_state(array(            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2099008,            'format' => '[2023-04-19T11:49:57.562017+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => false,            'stacktracesParser' => NULL,         )),          'streamChunkSize' => 13421772,          'stream' => NULL,          'url' => '/var/www/html/public/DEBUG',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      \DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,      'logDepth' => 0,      'fiberLogDepth' =>      \WeakMap::__set_state(array(     )),      'detectCycles' => true,   )),    'logLevel' => 'Debug',    'validator' =>    \InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    \GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        \GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',          'composedComponents' => NULL,       )),       'handler' =>        \GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          \Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )),    'bn1770369207zyv7ud0gxzckr2m' => 'bn1770369207zyv7ud0gxzckr2m', )) [] []
[2023-04-19T11:49:57.564801+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::getEvents(array (   0 => false,   1 => false,   2 =>    array (   ),   3 =>    array (   ),   4 =>    array (   ),   5 =>    array (   ),   6 => '20230419000000',   7 => '20230430235959',   8 => true, )) [] []
[2023-04-19T11:49:57.599458+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:49:57.600938+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/events, array (   'headers' =>    array (     'Authorization' => 'Basic Og==',   ),   'query' =>    array (     'filter[from]' => '20230419000000',     'filter[to]' => '20230430235959',     'include' => 'location',   ), )) [] []
[2023-04-19T11:52:07.589591+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2023-04-19T11:52:07.604272+00:00] inShore Bookwhen API.DEBUG: \InShore\Bookwhen\Client::__set_state(array(    'instanceToken' => NULL,    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'include' =>    array (   ),    'logFile' => 'DEBUG',    'logger' =>    \Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        \Monolog\Handler\StreamHandler::__set_state(array(          'level' =>          \Monolog\Level::Debug,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          \Monolog\Formatter\LineFormatter::__set_state(array(            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2099008,            'format' => '[2023-04-19T11:52:07.604272+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => false,            'stacktracesParser' => NULL,         )),          'streamChunkSize' => 13421772,          'stream' => NULL,          'url' => '/var/www/html/public/DEBUG',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      \DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,      'logDepth' => 0,      'fiberLogDepth' =>      \WeakMap::__set_state(array(     )),      'detectCycles' => true,   )),    'logLevel' => 'Debug',    'validator' =>    \InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    \GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        \GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',          'composedComponents' => NULL,       )),       'handler' =>        \GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          \Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )),    'token' => 'bn1770369207zyv7ud0gxzckr2m', )) [] []
[2023-04-19T11:52:07.607051+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::getEvents(array (   0 => false,   1 => false,   2 =>    array (   ),   3 =>    array (   ),   4 =>    array (   ),   5 =>    array (   ),   6 => '20230419000000',   7 => '20230430235959',   8 => true, )) [] []
[2023-04-19T11:52:07.634535+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:52:07.635847+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/events, array (   'headers' =>    array (     'Authorization' => 'Basic Og==',   ),   'query' =>    array (     'filter[from]' => '20230419000000',     'filter[to]' => '20230430235959',     'include' => 'location',   ), )) [] []
[2023-04-19T11:52:52.762696+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2023-04-19T11:52:52.778455+00:00] inShore Bookwhen API.DEBUG: \InShore\Bookwhen\Client::__set_state(array(    'token' => 'bn1770369207zyv7ud0gxzckr2m',    'instanceToken' => 'bn1770369207zyv7ud0gxzckr2m',    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'include' =>    array (   ),    'logFile' => 'DEBUG',    'logger' =>    \Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        \Monolog\Handler\StreamHandler::__set_state(array(          'level' =>          \Monolog\Level::Debug,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          \Monolog\Formatter\LineFormatter::__set_state(array(            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2099008,            'format' => '[2023-04-19T11:52:52.778455+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => false,            'stacktracesParser' => NULL,         )),          'streamChunkSize' => 13421772,          'stream' => NULL,          'url' => '/var/www/html/public/DEBUG',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      \DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,      'logDepth' => 0,      'fiberLogDepth' =>      \WeakMap::__set_state(array(     )),      'detectCycles' => true,   )),    'logLevel' => 'Debug',    'validator' =>    \InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    \GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        \GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',          'composedComponents' => NULL,       )),       'handler' =>        \GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          \Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )), )) [] []
[2023-04-19T11:52:52.780996+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::getEvents(array (   0 => false,   1 => false,   2 =>    array (   ),   3 =>    array (   ),   4 =>    array (   ),   5 =>    array (   ),   6 => '20230419000000',   7 => '20230430235959',   8 => true, )) [] []
[2023-04-19T11:52:52.795307+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:52:52.797249+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/events, array (   'headers' =>    array (     'Authorization' => 'Basic Ym4xNzcwMzY5MjA3enl2N3VkMGd4emNrcjJtOg==',   ),   'query' =>    array (     'filter[from]' => '20230419000000',     'filter[to]' => '20230430235959',     'include' => 'location',   ), )) [] []
[2023-04-19T11:53:20.642581+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2023-04-19T11:53:20.655026+00:00] inShore Bookwhen API.DEBUG: \InShore\Bookwhen\Client::__set_state(array(    'token' => 'bn1770369207zyv7ud0gxzckr2m',    'instanceToken' => 'bn1770369207zyv7ud0gxzckr2m',    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'include' =>    array (   ),    'logFile' => 'DEBUG',    'logger' =>    \Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        \Monolog\Handler\StreamHandler::__set_state(array(          'level' =>          \Monolog\Level::Debug,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          \Monolog\Formatter\LineFormatter::__set_state(array(            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2099008,            'format' => '[2023-04-19T11:53:20.655026+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => false,            'stacktracesParser' => NULL,         )),          'streamChunkSize' => 13421772,          'stream' => NULL,          'url' => '/var/www/html/public/DEBUG',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      \DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,      'logDepth' => 0,      'fiberLogDepth' =>      \WeakMap::__set_state(array(     )),      'detectCycles' => true,   )),    'logLevel' => 'Debug',    'validator' =>    \InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    \GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        \GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',          'composedComponents' => NULL,       )),       'handler' =>        \GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          \Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )), )) [] []
[2023-04-19T11:53:20.657175+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::getEvents(array (   0 => false,   1 => false,   2 =>    array (   ),   3 =>    array (   ),   4 =>    array (   ),   5 =>    array (   ),   6 => '20230419000000',   7 => '20230430235959',   8 => true, )) [] []
[2023-04-19T11:53:20.671168+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:53:20.672834+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/events, array (   'headers' =>    array (     'Authorization' => 'Basic Ym4xNzcwMzY5MjA3enl2N3VkMGd4emNrcjJtOg==',   ),   'query' =>    array (     'filter[from]' => '20230419000000',     'filter[to]' => '20230430235959',     'include' => 'location',   ), )) [] []
[2023-04-19T11:55:11.919537+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2023-04-19T11:55:11.938564+00:00] inShore Bookwhen API.DEBUG: \InShore\Bookwhen\Client::__set_state(array(    'token' => 'bn17703b9e2o7zyv7ud0gxzckr2m',    'instanceToken' => 'bn17703b9e2o7zyv7ud0gxzckr2m',    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'include' =>    array (   ),    'logFile' => 'DEBUG',    'logger' =>    \Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        \Monolog\Handler\StreamHandler::__set_state(array(          'level' =>          \Monolog\Level::Debug,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          \Monolog\Formatter\LineFormatter::__set_state(array(            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2099008,            'format' => '[2023-04-19T11:55:11.938564+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => false,            'stacktracesParser' => NULL,         )),          'streamChunkSize' => 13421772,          'stream' => NULL,          'url' => '/var/www/html/public/DEBUG',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      \DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,      'logDepth' => 0,      'fiberLogDepth' =>      \WeakMap::__set_state(array(     )),      'detectCycles' => true,   )),    'logLevel' => 'Debug',    'validator' =>    \InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    \GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        \GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',          'composedComponents' => NULL,       )),       'handler' =>        \GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          \Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )), )) [] []
[2023-04-19T11:55:11.941434+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::getEvents(array (   0 => false,   1 => false,   2 =>    array (   ),   3 =>    array (   ),   4 =>    array (   ),   5 =>    array (   ),   6 => '20230419000000',   7 => '20230430235959',   8 => true, )) [] []
[2023-04-19T11:55:11.976291+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:55:11.977123+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/events, array (   'headers' =>    array (     'Authorization' => 'Basic Ym4xNzcwM2I5ZTJvN3p5djd1ZDBneHpja3IybTo=',   ),   'query' =>    array (     'filter[from]' => '20230419000000',     'filter[to]' => '20230430235959',     'include' => 'location',   ), )) [] []
[2023-04-19T11:55:12.876093+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:55:12.876807+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/locations/04vr1pgqxuxr, array (   'headers' =>    array (     'Authorization' => 'Basic Ym4xNzcwM2I5ZTJvN3p5djd1ZDBneHpja3IybTo=',   ), )) [] []
[2023-04-19T11:55:13.022007+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:55:13.023215+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/locations/uo4xnp8jbxfb, array (   'headers' =>    array (     'Authorization' => 'Basic Ym4xNzcwM2I5ZTJvN3p5djd1ZDBneHpja3IybTo=',   ), )) [] []
[2023-04-19T11:55:13.114624+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:55:13.117757+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/locations/04vr1pgqxuxr, array (   'headers' =>    array (     'Authorization' => 'Basic Ym4xNzcwM2I5ZTJvN3p5djd1ZDBneHpja3IybTo=',   ), )) [] []
[2023-04-19T11:55:13.200254+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:55:13.204681+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/locations/uo4xnp8jbxfb, array (   'headers' =>    array (     'Authorization' => 'Basic Ym4xNzcwM2I5ZTJvN3p5djd1ZDBneHpja3IybTo=',   ), )) [] []
[2023-04-19T11:55:13.285675+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:55:13.289052+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/locations/uo4xnp8jbxfb, array (   'headers' =>    array (     'Authorization' => 'Basic Ym4xNzcwM2I5ZTJvN3p5djd1ZDBneHpja3IybTo=',   ), )) [] []
[2023-04-19T11:55:13.472528+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:55:13.482680+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/locations/04vr1pgqxuxr, array (   'headers' =>    array (     'Authorization' => 'Basic Ym4xNzcwM2I5ZTJvN3p5djd1ZDBneHpja3IybTo=',   ), )) [] []
[2023-04-19T11:56:05.627829+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2023-04-19T11:56:05.644426+00:00] inShore Bookwhen API.DEBUG: \InShore\Bookwhen\Client::__set_state(array(    'token' => 'bn17703b9e2o7zyv7ud0gxzckr2m',    'instanceToken' => 'bn17703b9e2o7zyv7ud0gxzckr2m',    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'include' =>    array (   ),    'logFile' => 'DEBUG',    'logger' =>    \Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        \Monolog\Handler\StreamHandler::__set_state(array(          'level' =>          \Monolog\Level::Debug,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          \Monolog\Formatter\LineFormatter::__set_state(array(            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2099008,            'format' => '[2023-04-19T11:56:05.644426+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => false,            'stacktracesParser' => NULL,         )),          'streamChunkSize' => 13421772,          'stream' => NULL,          'url' => '/var/www/html/public/DEBUG',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      \DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,      'logDepth' => 0,      'fiberLogDepth' =>      \WeakMap::__set_state(array(     )),      'detectCycles' => true,   )),    'logLevel' => 'Debug',    'validator' =>    \InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    \GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        \GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',          'composedComponents' => NULL,       )),       'handler' =>        \GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          \Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )), )) [] []
[2023-04-19T11:56:05.646299+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::getEvents(array (   0 => false,   1 => false,   2 =>    array (   ),   3 =>    array (   ),   4 =>    array (   ),   5 =>    array (   ),   6 => '20230419000000',   7 => '20230430235959',   8 => true, )) [] []
[2023-04-19T11:56:05.673049+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:56:05.674420+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/events, array (   'headers' =>    array (     'Authorization' => 'Basic Ym4xNzcwM2I5ZTJvN3p5djd1ZDBneHpja3IybTo=',   ),   'query' =>    array (     'filter[from]' => '20230419000000',     'filter[to]' => '20230430235959',     'include' => 'location',   ), )) [] []
[2023-04-19T11:58:12.934789+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2023-04-19T11:58:12.947051+00:00] inShore Bookwhen API.DEBUG: \InShore\Bookwhen\Client::__set_state(array(    'token' => 'bn17703b9e2o7zyv7ud0gxzckr2m',    'instanceToken' => 'bn17703b9e2o7zyv7ud0gxzckr2m',    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'include' =>    array (   ),    'logFile' => 'DEBUG',    'logger' =>    \Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        \Monolog\Handler\StreamHandler::__set_state(array(          'level' =>          \Monolog\Level::Debug,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          \Monolog\Formatter\LineFormatter::__set_state(array(            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2099008,            'format' => '[2023-04-19T11:58:12.947051+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => false,            'stacktracesParser' => NULL,         )),          'streamChunkSize' => 13421772,          'stream' => NULL,          'url' => '/var/www/html/public/DEBUG',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      \DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,      'logDepth' => 0,      'fiberLogDepth' =>      \WeakMap::__set_state(array(     )),      'detectCycles' => true,   )),    'logLevel' => 'Debug',    'validator' =>    \InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    \GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        \GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',          'composedComponents' => NULL,       )),       'handler' =>        \GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          \Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )), )) [] []
[2023-04-19T11:58:12.950073+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::getEvents(array (   0 => false,   1 => false,   2 =>    array (   ),   3 =>    array (   ),   4 =>    array (   ),   5 =>    array (   ),   6 => '20230419000000',   7 => '20230430235959',   8 => true, )) [] []
[2023-04-19T11:58:12.968115+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:58:12.970191+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/events, array (   'headers' =>    array (     'Authorization' => 'Basic Ym4xNzcwM2I5ZTJvN3p5djd1ZDBneHpja3IybTo=',   ),   'query' =>    array (     'filter[from]' => '20230419000000',     'filter[to]' => '20230430235959',     'include' => 'location',   ), )) [] []
[2023-04-19T11:59:53.215900+00:00] inShore Bookwhen API.INFO: Client class successfully instantiated [] []
[2023-04-19T11:59:53.228533+00:00] inShore Bookwhen API.DEBUG: \InShore\Bookwhen\Client::__set_state(array(    'token' => 'bn17703b9e2o7zyv7ud0gxzckr2m',    'instanceToken' => 'bn17703b9e2o7zyv7ud0gxzckr2m',    'apiBaseUri' => 'https://api.bookwhen.com/',    'apiQuery' =>    array (   ),    'apiResource' => NULL,    'apiVersion' => 'v2',    'include' =>    array (   ),    'logFile' => 'DEBUG',    'logger' =>    \Monolog\Logger::__set_state(array(      'name' => 'inShore Bookwhen API',      'handlers' =>      array (       0 =>        \Monolog\Handler\StreamHandler::__set_state(array(          'level' =>          \Monolog\Level::Debug,          'bubble' => true,          'processors' =>          array (         ),          'formatter' =>          \Monolog\Formatter\LineFormatter::__set_state(array(            'dateFormat' => 'Y-m-d\\TH:i:sP',            'maxNormalizeDepth' => 9,            'maxNormalizeItemCount' => 1000,            'jsonEncodeOptions' => 2099008,            'format' => '[2023-04-19T11:59:53.228533+00:00] inShore Bookwhen API.DEBUG: %message% [] [] ',            'allowInlineLineBreaks' => false,            'ignoreEmptyContextAndExtra' => false,            'includeStacktraces' => false,            'stacktracesParser' => NULL,         )),          'streamChunkSize' => 13421772,          'stream' => NULL,          'url' => '/var/www/html/public/DEBUG',          'errorMessage' => NULL,          'filePermission' => NULL,          'useLocking' => false,          'dirCreated' => true,       )),     ),      'processors' =>      array (     ),      'microsecondTimestamps' => true,      'timezone' =>      \DateTimeZone::__set_state(array(        'timezone_type' => 3,        'timezone' => 'UTC',     )),      'exceptionHandler' => NULL,      'logDepth' => 0,      'fiberLogDepth' =>      \WeakMap::__set_state(array(     )),      'detectCycles' => true,   )),    'logLevel' => 'Debug',    'validator' =>    \InShore\Bookwhen\Validator::__set_state(array(   )),    'guzzleClient' =>    \GuzzleHttp\Client::__set_state(array(      'config' =>      array (       'base_uri' =>        \GuzzleHttp\Psr7\Uri::__set_state(array(          'scheme' => 'https',          'userInfo' => '',          'host' => 'api.bookwhen.com',          'port' => NULL,          'path' => '/',          'query' => '',          'fragment' => '',          'composedComponents' => NULL,       )),       'handler' =>        \GuzzleHttp\HandlerStack::__set_state(array(          'handler' =>          \Closure::__set_state(array(         )),          'stack' =>          array (           0 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'http_errors',           ),           1 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'allow_redirects',           ),           2 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'cookies',           ),           3 =>            array (             0 =>              \Closure::__set_state(array(             )),             1 => 'prepare_body',           ),         ),          'cached' => NULL,       )),       'allow_redirects' =>        array (         'max' => 5,         'protocols' =>          array (           0 => 'http',           1 => 'https',         ),         'strict' => false,         'referer' => false,         'track_redirects' => false,       ),       'http_errors' => true,       'decode_content' => true,       'verify' => true,       'cookies' => false,       'idn_conversion' => false,       'headers' =>        array (         'User-Agent' => 'GuzzleHttp/7',       ),     ),   )), )) [] []
[2023-04-19T11:59:53.231748+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::getEvents(array (   0 => false,   1 => false,   2 =>    array (   ),   3 =>    array (   ),   4 =>    array (   ),   5 =>    array (   ),   6 => '20230419000000',   7 => '20230430235959',   8 => true, )) [] []
[2023-04-19T11:59:53.248535+00:00] inShore Bookwhen API.DEBUG: InShore\Bookwhen\Client::request() [] []
[2023-04-19T11:59:53.249714+00:00] inShore Bookwhen API.DEBUG: request(GET, v2/events, array (   'headers' =>    array (     'Authorization' => 'Basic Ym4xNzcwM2I5ZTJvN3p5djd1ZDBneHpja3IybTo=',   ),   'query' =>    array (     'filter[from]' => '20230419000000',     'filter[to]' => '20230430235959',     'include' => 'location',   ), )) [] []
